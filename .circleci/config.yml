# Check https://circleci.com/docs/2.0/language-clojure/ for more details
version: 2.1

executors:
  clojure:
    working_directory: ~/core2
    docker:
      - image: clojure:openjdk-11-tools-deps

orbs:
  slack: circleci/slack@4.1

jobs:
  setup:
    executor: clojure

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # for Slack
      - run: apt-get update && apt-get install -y curl

      - run: 'md5sum deps.edn */deps.edn modules/*/deps.edn > .circleci-cache-key'

      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum ".circleci-cache-key" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-

      - run: 'clojure -Srepro -X:deps prep'

      # https://clojure.atlassian.net/browse/TDEPS-153
      # can remove `-Sthreads 1` when the Docker image updates to 1.11.0.1100 or later.
      - run: 'clojure -P -Sthreads 1'

      - persist_to_workspace:
          root: ~/
          paths:
            - .m2
            - .gitlibs
            - core2

      - save_cache:
          paths:
            - ~/.m2
            - ~/.gitlibs
          key: v4-dependencies-{{ checksum ".circleci-cache-key" }}

      - slack/notify:
          branch_pattern: master
          channel: xtdb-builds
          event: fail
          template: basic_fail_1

  third-party-notices:
    executor: clojure

    steps:
      - attach_workspace:
          at: ~/

      - run: apt-get update && apt-get install -y curl maven libxml2-utils

      - run: curl -sLO https://raw.githubusercontent.com/babashka/babashka/master/install && chmod +x install && ./install

      - run: ./bin/detect-and-create-third-party-notices.sh

      - run: bb ./bin/detect_eclipse_public_license.clj

  test:
    executor: clojure

    steps:
      - attach_workspace:
          at: ~/

      - run: apt-get update && apt-get install -y curl
      - run: 'clojure -Srepro -X:core2:4gb:test'

      - slack/notify:
          branch_pattern: master
          channel: xtdb-builds
          event: fail
          template: basic_fail_1

  integration-test:
    executor: clojure

    steps:
      - attach_workspace:
          at: ~/

      - run: apt-get update && apt-get install -y curl
      # TODO should test the other modules too
      - run: 'clojure -Srepro -X:core2:4gb:integration-test'

      - slack/notify:
          branch_pattern: master
          channel: xtdb-builds
          event: fail
          template: basic_fail_1

  slt-test:
    executor: clojure
    resource_class: medium

    steps:
      - attach_workspace:
          at: ~/

      - run: 'clojure -Srepro -M:core2:4gb:slt-test'

  slt-test-2:
    executor: clojure
    resource_class: medium

    steps:
      - attach_workspace:
          at: ~/

      - run: 'clojure -Srepro -M:core2:4gb:slt-test-2'

  slt-test-dirs:
    executor: clojure
    resource_class: medium
    parameters:
      dirs:
        type: string

    steps:
      - attach_workspace:
          at: ~/

      - run: 'clojure -Srepro -M:core2:4gb:slt-test-dirs << parameters.dirs >>'

  slt-direct-sql:
    executor: clojure
    resource_class: medium

    steps:
      - attach_workspace:
          at: ~/

      - run: 'clojure -Srepro -M:core2:4gb:slt-direct-sql'

workflows:
  build:
    jobs:
      - setup:
          context: slack-bot
      - third-party-notices:
          requires:
            - setup
      - test:
          context: slack-bot
          requires:
            - setup
      - integration-test:
          context: slack-bot
          requires:
            - setup
      - slt-test:
          requires:
            - setup
      - slt-test-2:
          requires:
            - setup
      - slt-direct-sql:
          requires:
            - setup
      - slt-test-dirs:
          requires:
            - setup
          matrix:
            parameters:
              dirs:
                # - "test/core2/sql/logic_test/sqlite_test/random/expr/"
                # - "test/core2/sql/logic_test/sqlite_test/random/aggregates/"
                  # - "test/core2/sql/logic_test/sqlite_test/random/groupby/"
                  # - "test/core2/sql/logic_test/sqlite_test/random/select/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/between/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/commute/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/orderby/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/orderby_nosort/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/in/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/random/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/delete/"
                  #  - "test/core2/sql/logic_test/sqlite_test/index/view/"
