(* Datalog parser based on https://docs.racket-lang.org/datalog/datalog.html *)
(* See also https://github.com/antlr/grammars-v4/blob/master/prolog/prolog.g4 *)

<program> = statement*
<statement> = assertion | retraction | query | requirement

assertion = clause <'.'>
retraction = clause <('~'|'-')>
requirement = <'('> symbol <')'> <'.'>
query = predicate <'?'>

<clause> = rule | fact
rule =  head body
fact = predicate
head = predicate <':-'>
body = literal*

<literal> = predicate | not | equality_predicate | assignment
predicate = symbol arguments?
not = <('not'|'!')> predicate
external_query = external_symbol arguments?
equality_predicate = term comparison_operator term
comparison_operator = '=' | '!=' | '<' | '<=' | '>' | '>='
assignment = variable <('is'|':-'|'=')> (arithmetic | external_query)

<arithmetic> = mul_div | add | sub
add = arithmetic <'+'> mul_div
sub = arithmetic <'-'> mul_div
<mul_div> = expression_term | mul | div
mul = mul_div <'*'> expression_term
div = mul_div <'/'> expression_term
<expression_term> = term | <'('> arithmetic <')'>

symbol = identifier
arguments = (<'('> term* <')'>)
external_symbol = #'[\S&&[^(]]+'
term = constant | variable
variable = #'[A-Z_]\w*'
constant = boolean |  identifier | string | number
<boolean> = 'true' | 'false'
<string> = #'"([^"\\]|\\.)*"'
<number> = #'-?\d+(.?\d+)?'
<identifier> = #'[a-z][\w/]*'
