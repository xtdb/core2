hash-threshold 100

statement ok
INSERT INTO foo (id, x) VALUES (1, 1), (2, 2)

statement ok
INSERT INTO bar (id, x) VALUES (1, 1), (2, 3)

statement ok
INSERT INTO baz (id, x) VALUES (1, 2)

# named column joins

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo LEFT JOIN bar USING (id, x)
----
1
1
1
1
2
2
NULL
NULL

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo LEFT JOIN bar USING (id) WHERE foo.x = bar.x
----
1
1
1
1

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo JOIN bar USING (id, x)
----
1
1
1
1

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo JOIN bar USING (id) WHERE foo.x = bar.x
----
1
1
1
1

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo RIGHT JOIN bar USING (id, x)
----
1
1
1
1
NULL
NULL
2
3

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo RIGHT JOIN bar USING (id) WHERE foo.x = bar.x
----
1
1
1
1

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo INNER JOIN bar USING (id, x)
----
1
1
1
1

query IIII rowsort
SELECT foo.id foo, foo.x foo_x, bar.id bar, bar.x bar_x FROM foo INNER JOIN bar USING (id) WHERE foo.x = bar.x
----
1
1
1
1

# simple qualified joins

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x = foo.x
----
1
1
1
3
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON bar.x = foo.x
----
1
1
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON bar.x = bar.x
----
1
1
1
3
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON bar.x = foo.x
----
1
1
NULL
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo JOIN bar ON bar.x = foo.x
----
1
1

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo INNER JOIN bar ON bar.x = foo.x
----
1
1

# uncorrelated subquery in join clause

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON bar.x = (SELECT baz.x FROM baz)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x = (SELECT baz.x FROM baz)
----
1
NULL
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON bar.x = (SELECT baz.x FROM baz)
----
NULL
1
NULL
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON foo.x = (SELECT baz.x FROM baz)
----
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo JOIN bar ON bar.x = (SELECT baz.x FROM baz)
----

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo JOIN bar ON foo.x = (SELECT baz.x FROM baz)
----
2
1
2
3

# uncorrelated subquery in join clause with additional clause

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON bar.x = (SELECT baz.x FROM baz) AND foo.x = bar.x
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x = (SELECT baz.x FROM baz) AND foo.x = bar.x
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x = (SELECT baz.x FROM baz) AND foo.x = 2
----
1
NULL
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON bar.x = (SELECT baz.x FROM baz) AND foo.x = 2
----
NULL
1
NULL
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON foo.x = (SELECT baz.x FROM baz) AND foo.x = 2
----
2
1
2
3

# correlated subquery in join clause

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON bar.x = (SELECT baz.x FROM baz WHERE baz.x = bar.x)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON bar.x = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x = (SELECT baz.x FROM baz WHERE baz.x = bar.x)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
1
NULL
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON bar.x = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
NULL
1
NULL
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON foo.x = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo INNER JOIN bar ON foo.x = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo JOIN bar ON bar.x = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x = (SELECT baz.x FROM baz WHERE baz.x = foo.x) AND foo.x = (bar.x + 1)
----
1
NULL
2
1

# mulitple correlated subqueries in join clause

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON (SELECT baz.x FROM baz WHERE baz.x = foo.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
1
NULL
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON (SELECT baz.x FROM baz WHERE NOT baz.x = bar.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
1
NULL
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON (SELECT baz.x FROM baz WHERE foo.x = bar.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON (SELECT baz.x FROM baz WHERE foo.x = bar.x) = (SELECT baz.x FROM baz WHERE baz.x = bar.x)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON (SELECT baz.x FROM baz WHERE baz.x = foo.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo JOIN bar ON (SELECT baz.x FROM baz WHERE foo.x = bar.x) = (SELECT baz.x FROM baz WHERE baz.x = bar.x)
----

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON (SELECT baz.x FROM baz WHERE NOT baz.x = bar.x AND foo.x = baz.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x AND bar.x = foo.x)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON (SELECT baz.x FROM baz WHERE NOT baz.x = bar.x AND foo.x = baz.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x AND bar.x = 3)
----
1
NULL
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON (SELECT baz.x FROM baz WHERE NOT baz.x = bar.x AND foo.x = baz.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x AND bar.x = 3)
----
2
3
NULL
1

# join over subquery tables with subquery join clause

query II rowsort
SELECT foo.x, bar.x bar_x FROM (SELECT foo.id, foo.x FROM foo) AS foo LEFT JOIN (SELECT bar.id, bar.x FROM bar) AS bar ON (SELECT baz.x FROM baz WHERE NOT baz.x = bar.x AND foo.x = baz.x) = (SELECT baz.x FROM baz WHERE baz.x = foo.x AND bar.x = 3)
----
1
NULL
2
3

# correlated quantified comparison join clause

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x IN (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
1
NULL
2
1
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON bar.x IN (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
1
NULL
2
NULL

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo RIGHT JOIN bar ON bar.x IN (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----
NULL
1
NULL
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo INNER JOIN bar ON bar.x IN (SELECT baz.x FROM baz WHERE baz.x = foo.x)
----

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo JOIN bar ON foo.x IN (SELECT baz.x FROM baz WHERE baz.x = foo.x AND bar.x = 3)
----
2
3

query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x IN (SELECT baz.x FROM baz WHERE baz.x = foo.x AND bar.x = 1)
----
1
NULL
2
1


query II rowsort
SELECT foo.x, bar.x bar_x FROM foo LEFT JOIN bar ON foo.x IN (SELECT baz.x FROM baz WHERE baz.x = foo.x AND bar.x = 1) AND bar.x IN (SELECT foo.x FROM foo WHERE bar.x = foo.x)
----
1
NULL
2
1

# multiple qualified-joins

query III rowsort
SELECT foo.x, bar.x, baz.x FROM foo LEFT JOIN bar ON foo.x = bar.x LEFT JOIN baz ON foo.x = baz.x
----
1
1
NULL
2
NULL
2

query III rowsort
SELECT foo.x, bar.x, baz.x FROM foo LEFT JOIN bar ON foo.x = bar.x LEFT JOIN baz ON foo.x = bar.x
----
1
1
2
2
NULL
NULL

statement ok
INSERT INTO bibble (id, x) VALUES (1, 1), (2, 2)

query IIII rowsort
SELECT foo.x, bar.x, baz.x, bibble.x FROM foo JOIN bar ON foo.x = bar.x RIGHT JOIN baz ON bar.x = (SELECT baz.x FROM baz WHERE foo.x = bar.x) LEFT JOIN bibble ON bar.x = bibble.x
----
NULL
NULL
2
NULL
